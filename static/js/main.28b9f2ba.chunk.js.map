{"version":3,"sources":["App.module.css","Components/Header/Header.module.css","Components/Common/FormsControl/FormsControls.module.css","Components/Profile/My posts/MyPosts.module.css","Content.module.css","Components/Profile/ProfileInfo/ProfileStatus.module.css","Components/Profile/My posts/Posts/Post.module.css","Components/Dialogs/Dialogs.module.css","Components/Navbar/Navbar.tsx","Components/SideBarFriends/SideBarFriends.tsx","API/API.tsx","Redux/Users-reducer.ts","assets/images/dudeWithSuite.jpg","users/Users.tsx","users/Eclipse-1s-200px.svg","Components/Common/Preloader/Preloader.sx.tsx","hoc/withAuthRedirect.tsx","users/UsersContainer.tsx","Components/Header/Header.tsx","Redux/Auth-reducer.ts","Components/Header/HeaderContainer.tsx","Components/Common/FormsControl/FormsControls.tsx","Components/utils/validators.ts","Components/Login/Login.tsx","Redux/Dialogs-reducer.ts","Components/Dialogs/Message/Message.tsx","Components/Dialogs/AddMessageForm.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/Message/DialogsContainer.tsx","Components/Profile/ProfileInfo/ProfileStatus.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/My posts/Posts/Posts.tsx","Components/Profile/My posts/Myposts.tsx","Redux/Profile-reducer.ts","Components/Profile/My posts/Posts/MypostsConteiner.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","App.tsx","Redux/sidebar-reducer.ts","Redux/redax-store.ts","index.tsx","Components/Navbar/Navbar.module.css","Components/SideBarFriends/SIdebarFriends.module.css","users/Users.module.css","Components/Login/Login.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css"],"names":["module","exports","Navbar","className","s","nav","item","to","activeClassName","active","FriendsItem","props","path","id","dialog","name","SideBarFriends","bigFriends","useSelector","state","sidebarReducer","SideBar","map","sideBar","content","instance","axios","create","withCredentials","baseURL","headers","userAPI","currentPage","pageSize","get","then","response","data","userId","console","warn","profileAPI","status","put","authAPI","email","password","rememberMe","post","delete","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_CUOUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","totalUserCount","isFetching","followingInProgres","toogleFollowingProgresAC","type","followACSuccess","unFollowACSuccess","setCurrentPageAC","isFetchingAC","getUsersThunkCreator","dispatch","items","totalCount","Users","pagesCount","Math","ceil","totalUsersCount","pages","i","push","log","p","selectedPageThin","selectedPageFat","onClick","e","onPageChanged","u","src","photos","small","dudeWithSuite","usersFoto","followed","Button","variant","size","disabled","some","unfollow","follow","Typography","mt","Preloader","preloader","mapStateToProps","isAuth","authReducer","withAuthRedirect","Component","connect","restProps","UsersContainer","this","usersPage","React","compose","usersId","setCurrentPage","pageNumber","toogleFollowingProgres","Header","header","login_block","Login","LogOut","SET_USER_DATA","login","setUserDataAC","payload","getUserData","resultCode","action","HeaderContainer","FormControl","input","meta","children","hasError","touched","error","formControl","Textarea","Input","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","placeholder","component","getState","formData","DialogsData","MessagesData","message","Message","Avatar","img","alt","maxlenght50","AddmessageFormRedux","inputStyle","button","DialogsItems","Dialogs","dialogsMessage","dialogsReducer","DialogsElements","d","messagesElement","m","dialogs","dialogItems","messages","inputData","addChatContainer","newMessageBody","useDispatch","isAuthLogin","sendMessageBodyAC","ProfileStatus","editMode","activateEditMode","setState","deActivateEditMode","updateStatus","onStatusChange","currentTarget","prevProps","prevState","snapshot","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","profile","ProfileStyle","contacts","github","facebook","instagram","Posts","LikesCount","maxLength10","MyPosts","postsElement","profileReducer","MyPostsData","posts","AddPostFormRedux","addPost","myPosts","ADD_POST","SET_USERS_PROFILE","SET_STATUS","setStatusAC","MyPostsContainer","addPostActionCreator","onPostChangeContainer","newText","onPostChangeActionCreator","Profile","ProfileContainer","match","params","getUsersProfile","getStatus","withRouter","App","appWrapper","navbarwrappper","style","render","reducers","combineReducers","body","newPost","Date","getTime","reverse","filter","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.28b9f2ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1WaLk\",\"navbarwrappper\":\"App_navbarwrappper__3iLdn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1hm4S\",\"login_block\":\"Header_login_block__31vM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__m8RVr\",\"error\":\"FormsControls_error__359KO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1AScq\",\"inputStyle\":\"MyPosts_inputStyle__Ss7iL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__14Bda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputStyle\":\"ProfileStatus_inputStyle__1MWTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__3jn7l\",\"item\":\"Post_item__wDNQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__-eIhE\",\"dialogItems\":\"Dialogs_dialogItems__1E-VT\",\"messages\":\"Dialogs_messages__1DwvL\",\"message\":\"Dialogs_message__4C7ZL\",\"s\":\"Dialogs_s__24nYo\",\"img\":\"Dialogs_img__14RvZ\",\"button\":\"Dialogs_button__14EOA\",\"inputStyle\":\"Dialogs_inputStyle__vS6ND\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink></div>\r\n        </nav>)\r\n}","import React from 'react';\r\nimport s from \"./SIdebarFriends.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../Redux/redax-store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ProfileType} from \"../../Redux/Profile-reducer\";\r\nimport {SideType} from \"../../Redux/sidebar-reducer\";\r\n\r\n\r\ntype SideBarFriendsType = {}\r\nconst FriendsItem = (props: any) => {\r\n    let path = '/profile/' + props.id;\r\n    return (\r\n        <div className={s.dialog + '' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const SideBarFriends = () => {\r\n    const profilePage = useSelector<AppRootStateType, SideType>(state => state.sidebarReducer)\r\n    const bigFriends = profilePage.SideBar.map(s => <FriendsItem name={s.name} id={s.id}/>)\r\n    return (\r\n        <nav className={s.sideBar}>\r\n\r\n            <div className={s.content}>\r\n                Friends online\r\n                <NavLink to=\"/friends\" activeClassName={s.active}>{bigFriends}</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"c9285f11-d925-4b54-a585-0cfc21bacaae\",\r\n    },\r\n});\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance\r\n            .get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    getUsersFollow(id = 1) {\r\n        return instance.post(`follow/${id}`);\r\n    },\r\n    getUsersUnFollow(id = 1) {\r\n        return instance.delete(`follow/${id}`);\r\n    },\r\n    getProfile(userId: string) {\r\n        console.warn(\"Absolute method. Please profileAPI object.\");\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n};\r\nexport const profileAPI = {\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    },\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email: string, password: string, rememberMe: false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    Logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { userAPI } from \"../API/API\";\r\n\r\n\r\nexport type DialogsType = typeof initialState\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UNFOLLOW = \"UNFOLLOW\"\r\nconst SET_USERS = \"SET-USERS\"\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\"\r\nconst SET_USERS_TOTAL_CUOUNT = \"SET-USERS-TOTAL-COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\"\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE-IS-FOLLOWING-PROGRESS\"\r\nexport type FollowingType = {}\r\nexport type UserType = {\r\n    id: number,\r\n    photos: PhotosType\r\n    followed: boolean,\r\n    name: string,\r\n    status: string\r\n}\r\ntype PhotosType = {\r\n    small: string\r\n    Large: string\r\n}\r\nexport const initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 7,\r\n    totalUserCount: 50,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgres: [],\r\n};\r\nexport type InitialStateType = {\r\n    users: Array<UserType>,\r\n    pageSize: number,\r\n    totalUserCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgres: Array<FollowingType>,\r\n\r\n}\r\n\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            console.log(action.users);\r\n            const test = action.users.reverse()\r\n            console.log(action.users.reverse())\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_USERS_TOTAL_CUOUNT: {\r\n            return { ...state, totalUserCount: action.totalCount }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgres: action.isFetching ?\r\n                    [...state.followingInProgres, action.userId] :\r\n                    [...state.followingInProgres.filter(id => id != action.userId)]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const toogleFollowingProgresAC = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    } as const\r\n}\r\nexport const followACSuccess = (userId: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId,\r\n    } as const\r\n}\r\nexport const unFollowACSuccess = (userId: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    } as const\r\n}\r\nexport const setUsersAC = (users: Array<UserType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    } as const\r\n}\r\nexport const setCurrentPageAC = (currentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    } as const\r\n}\r\nexport const setUsersTotalCountAC = (totalCount: number) => {\r\n    return {\r\n        type: SET_USERS_TOTAL_CUOUNT,\r\n        totalCount: 100\r\n    } as const\r\n}\r\nexport const isFetchingAC = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    } as const\r\n}\r\ntype toogleFollowingProgresACType = ReturnType<typeof toogleFollowingProgresAC>\r\ntype followACType = ReturnType<typeof followACSuccess>\r\ntype unFollowACType = ReturnType<typeof unFollowACSuccess>\r\ntype setUsersACACType = ReturnType<typeof setUsersAC>\r\ntype setCurrentPageACType = ReturnType<typeof setCurrentPageAC>\r\ntype setUsersTotalCountACType = ReturnType<typeof setUsersTotalCountAC>\r\ntype isFetchingACType = ReturnType<typeof isFetchingAC>\r\n\r\n\r\nexport type ActionTypes =\r\n    followACType\r\n    | unFollowACType\r\n    | setUsersACACType\r\n    | setCurrentPageACType\r\n    | setUsersTotalCountACType\r\n    | isFetchingACType\r\n    | toogleFollowingProgresACType\r\n\r\n\r\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(isFetchingAC(true))\r\n        userAPI.getUsers(currentPage, pageSize).then(data => {\r\n\r\n            dispatch(setCurrentPageAC(currentPage))\r\n            dispatch(isFetchingAC(false))\r\n            dispatch(setUsersAC(data.items))\r\n            dispatch(setUsersTotalCountAC(data.totalCount));\r\n        })\r\n    }\r\n}\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toogleFollowingProgresAC(true, userId))\r\n        userAPI.getUsersFollow(userId).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(followACSuccess(userId))\r\n            }\r\n            dispatch(toogleFollowingProgresAC(false, userId))\r\n        })\r\n    }\r\n}\r\nexport const unFollow = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        toogleFollowingProgresAC(true, userId)\r\n        userAPI.getUsersUnFollow(userId).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                unFollowACSuccess(userId)\r\n            }\r\n            toogleFollowingProgresAC(false, userId)\r\n        })\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/dudeWithSuite.5d9ea631.jpg\";","import React from 'react'\r\nimport s from \"./Users.module.css\";\r\nimport dudeWithSuite from \"../assets/images/dudeWithSuite.jpg\";\r\nimport { Button } from \"@mui/material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { FollowingType, UserType } from \"../Redux/Users-reducer\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { log } from \"util\";\r\n\r\nexport type PropsUsersPresentsTYpe = {\r\n    onPageChanged: (pageNumber: number) => void\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    users: Array<UserType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followingInProgres: Array<FollowingType>\r\n}\r\n\r\n\r\nconst Users = (props: PropsUsersPresentsTYpe) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    console.log(props.currentPage)\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span\r\n                        className={props.currentPage === p ? s.selectedPageThin : s.selectedPageFat}\r\n                        onClick={(e) => {\r\n                            props.onPageChanged(p)\r\n                        }}\r\n                    >{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <img src={u.photos.small !== null ? u.photos.small : dudeWithSuite}\r\n                                    className={s.usersFoto} />\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>{u.followed ?\r\n                            <Button variant=\"contained\" size=\"small\"\r\n                                disabled={props.followingInProgres.some(id => id === u.id)} onClick={() => {\r\n                                    props.unfollow(u.id)\r\n                                }}>Unfollow</Button> :\r\n                            <Button variant=\"contained\" size=\"small\"\r\n                                disabled={props.followingInProgres.some(id => id === u.id)} onClick={() => {\r\n                                    props.follow(u.id)\r\n                                }}\r\n                            >Follow</Button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <Typography mt={2}>\r\n                            <span>\r\n                                <div>{u.name}</div>\r\n                                <div>{u.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{\"u.location.country\"}</div>\r\n                                <div>{\"u.location.city\"}</div>\r\n                            </span>\r\n                        </Typography>\r\n                        <span>\r\n                            <div>{u.id}</div>\r\n                        </span>\r\n                    </span>\r\n\r\n                </div>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/Eclipse-1s-200px.af2ae354.svg\";","import preloader from \"../../../users/Eclipse-1s-200px.svg\";\r\nimport React from \"react\";\r\ntype PreloaderType={\r\n\r\n}\r\nconst  Preloader = (props:PreloaderType)=>{\r\n    return <div>  <img src={preloader}/></div>\r\n}\r\n\r\nexport default Preloader;","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../Redux/redax-store\";\r\n\r\ntype mapStateToPropsType={\r\n    isAuth:boolean\r\n}\r\nconst mapStateToProps=(state:AppRootStateType):mapStateToPropsType=>{\r\n    return{\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\nexport function withAuthRedirect<T>(Component:ComponentType<T>){\r\n    const RedirectComponent=(props:mapStateToPropsType)=>{\r\n        let {isAuth, ...restProps}=props\r\n        if (!props.isAuth) return <Redirect to={\"/Login\"}/>\r\n        return<Component {...restProps as T} />\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../Redux/redax-store\";\r\nimport {\r\n    followACSuccess,\r\n    FollowingType, getUsersThunkCreator,\r\n    InitialStateType, setCurrentPageAC, toogleFollowingProgresAC, unFollowACSuccess\r\n} from \"../Redux/Users-reducer\";\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Components/Common/Preloader/Preloader.sx\";\r\nimport {Action, compose} from \"redux\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    usersPage: InitialStateType\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgres: Array<FollowingType>\r\n}\r\ntype mapDispatchToPRopsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    toogleFollowingProgres: (isFetching: boolean, userId: number) => void,\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = mapDispatchToPRopsType & mapStateToPropsType;\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType, InitialStateType> {\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (currentPage: number) => {\r\n        this.props.getUsersThunkCreator(currentPage, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                onPageChanged={this.onPageChanged}\r\n                totalUsersCount={this.props.totalUserCount}\r\n                currentPage={this.props.currentPage}\r\n                pageSize={this.props.pageSize}\r\n                users={this.props.usersPage.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgres={this.props.followingInProgres}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): mapStateToPropsType => {\r\n    return {\r\n        usersPage: state.users,\r\n        pageSize: state.users.pageSize,\r\n        totalUserCount: state.users.totalUserCount,\r\n        currentPage: state.users.currentPage,\r\n        isFetching: state.users.isFetching,\r\n        followingInProgres: state.users.followingInProgres,\r\n    }\r\n}\r\n\r\nconst mapDispatchToPRops = (dispatch: ThunkDispatch<AppRootStateType, void, Action>): mapDispatchToPRopsType => {\r\n    return {\r\n        follow: (usersId: number) => {\r\n            dispatch(followACSuccess(usersId))\r\n        },\r\n        unfollow: (userId: number) => {\r\n            dispatch(unFollowACSuccess(userId))\r\n        },\r\n        setCurrentPage: (pageNumber: number) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        toogleFollowingProgres: (isFetching: boolean, userId: number) => {\r\n            dispatch(toogleFollowingProgresAC(isFetching, userId))\r\n        },\r\n        getUsersThunkCreator: (currentPage: number, pageSize: number) => {\r\n            dispatch(getUsersThunkCreator(currentPage, pageSize))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(withAuthRedirect, connect(mapStateToProps, mapDispatchToPRops),\r\n)(UsersContainer);","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport {LogOut} from \"../../Redux/Auth-reducer\";\r\n\r\n\r\ntype HeaderType = {\r\n    isAuth: boolean,\r\n    Login: string|null,\r\n    LogOut:()=>void\r\n}\r\nexport const Header = (props: HeaderType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://themified.com/friend-finder/images/logo.png'/>\r\n            <div className={s.login_block}>\r\n                {props.isAuth ? <div>{props.Login} - <button onClick={props.LogOut}>Log out</button> </div>:\r\n                    <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}","import { Dispatch } from \"redux\";\r\nimport { authAPI } from \"../API/API\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET-USER-DATA\";\r\n\r\nexport type DataType = {\r\n  id: number;\r\n  email: string;\r\n  login: string;\r\n};\r\nexport type isAuthType = {\r\n  isAuth: boolean;\r\n};\r\nexport type AuthType = typeof initialState;\r\nexport const initialState = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (\r\n  state: AuthType = initialState,\r\n  action: ActionAuthType\r\n): typeof initialState => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUserDataAC = (\r\n  id: null,\r\n  login: null,\r\n  email: null,\r\n  isAuth: boolean\r\n) => {\r\n  return {\r\n    type: SET_USER_DATA,\r\n    payload: { id, email, login, isAuth },\r\n  } as const;\r\n};\r\nexport const getUserData = () => (dispatch: Dispatch) => {\r\n  authAPI.me().then((response) => {\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(\r\n        setUserDataAC(\r\n          response.data.data.id,\r\n          response.data.data.login,\r\n          response.data.data.email,\r\n          true\r\n        )\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\nexport const login =\r\n  (email: string, password: string, rememberMe: false): ThunkType =>\r\n  (dispatch, getState: () => AuthType) => {\r\n    authAPI.login(email, password, rememberMe).then((response) => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(getUserData());\r\n      }else {\r\n        // let action = stopSubmit(\"Login\",{email:\"email is wrong\"})\r\n        // dispatch(action)\r\n      }\r\n    });\r\n  };\r\n\r\nexport const LogOut = (): ThunkType => (dispatch) => {\r\n  authAPI.Logout().then((response) => {\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setUserDataAC(null, null, null, false));\r\n    }\r\n  });\r\n};\r\ntype ThunkType = ThunkAction<void, AuthType, unknown, ActionAuthType>;\r\ntype setUserDataACType = ReturnType<typeof setUserDataAC>;\r\ntype ActionAuthType = setUserDataACType;\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport {Header} from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {AuthType, getUserData, LogOut, setUserDataAC} from \"../../Redux/Auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/redax-store\";\r\nimport {Logout} from \"@mui/icons-material\";\r\n\r\n\r\n;\r\n\r\n\r\ntype maDispatchType = {\r\n    // setUserDataAC: (id: null,\r\n    //                 email: null,\r\n    //                 login: null) => void\r\n    getUserData:()=>void\r\n    LogOut:()=>void\r\n\r\n};\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean,\r\n    Login: null | string\r\n\r\n}\r\nexport type HeaderContainerType = maDispatchType & mapStateToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType, AuthType> {\r\n    componentDidMount() {\r\n\r\n        this.props.getUserData()\r\n    }\r\n\r\n    render() {\r\n        return <Header\r\n            {...this.props}\r\n        />\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch: Dispatch): maDispatchType => {\r\n//     return {\r\n//         setUserDataAC: (id, email, login) => {\r\n//             dispatch(setUserDataAC(id, email, login))\r\n//         }\r\n//     }\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state: AppRootStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n        Login: state.authReducer.login\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{getUserData,LogOut} )(HeaderContainer)","import React from \"react\";\r\nimport { WrappedFieldProps } from \"redux-form\";\r\nimport s from \"./FormsControls.module.css\";\r\n\r\nconst FormControl:React.FC<WrappedFieldProps> = ({input, meta, children, ...props})=>{\r\n  const hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \" \")}>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n  const {input, meta, children, ...restProps}=props\r\n  \r\n\r\n  return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n};\r\n\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n  const {input, meta, children, ...restProps}=props\r\n  \r\n\r\n  return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n};\r\n","export type FieldValidatorsType = (value: string) => string | undefined;\r\n\r\n\r\nexport const required: FieldValidatorsType = (value: string): string | undefined => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator =\r\n    (maxLength: number): FieldValidatorsType => (value) => {\r\n        if (value.length > maxLength) return `Max length is ${maxLength} symbols `;\r\n        return undefined;\r\n    };\r\n","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControl/FormsControls\";\r\nimport {required} from \"../utils/validators\";\r\nimport s from \"./Login.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../Redux/redax-store\";\r\nimport {login} from \"../../Redux/Auth-reducer\";\r\n\r\ntype LoginFormType = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: false;\r\n};\r\n\r\ntype mastateToPropsType = {\r\n    isAuth: boolean\r\n}\r\nexport let LoginForm: React.FC<InjectedFormProps<LoginFormType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    validate={[required]}\r\n                    className={s.input}\r\n                    placeholder={\"Email\"}\r\n                    name={\"email\"}\r\n                    component={Input}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    validate={[required]}\r\n                    className={s.input}\r\n                    placeholder={\"Password\"}\r\n                    name={\"password\"}\r\n                    component={Input}\r\n                    type={\"password\"}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    className={s.input}\r\n                    component={Input}\r\n                    name={\"rememberMe\"}\r\n                    type={\"checkbox\"}\r\n                />{\" \"}\r\n                remember me\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormType>({form: \"Login\"})(LoginForm);\r\n\r\ntype loginType = {\r\n    login: (email: string, password: string, rememberMe: false) => void;\r\n    isAuth: boolean\r\n};\r\n\r\nconst Login = (props: loginType) => {\r\n    const onSubmit = (formData: LoginFormType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n    if (props.isAuth) {\r\n        return <Redirect to='/Profile'/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1> Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateTpProps = (state: AppRootStateType): mastateToPropsType => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateTpProps, {login: login})(Login);\r\n","import {AddmessageFormType} from \"../Components/Dialogs/Dialogs\";\r\n\r\nexport type DialogsType = typeof initialState\r\nexport const initialState = {\r\n    DialogsData: [\r\n        {id: 1, name: 'Pall'},\r\n        {id: 2, name: 'Artur'},\r\n        {id: 3, name: 'Valeri'},\r\n        {id: 4, name: 'Nikol'},\r\n        {id: 5, name: 'Bond'},\r\n        {id: 6, name: 'Petrovich'},\r\n    ],\r\n    MessagesData: [\r\n        {id: 1, message: 'hello'},\r\n        {id: 2, message: 'How are you'},\r\n        {id: 3, message: 'Yo'},\r\n    ],\r\n};\r\n\r\n\r\nexport const dialogsReducer = (state: DialogsType = initialState, action: ActionTypes): typeof initialState => {\r\n    switch (action.type) {\r\n        case \"SEND_MESSAGE_BODY\":\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const sendMessageBodyAC = (newMessageBody: string) => {\r\n    return {\r\n        type: \"SEND_MESSAGE_BODY\",\r\n        newMessageBody: newMessageBody\r\n\r\n    } as const\r\n}\r\n\r\ntype SendMessageBodyCreatorActionCreatorType = ReturnType<typeof sendMessageBodyAC>\r\n\r\n\r\ntype ActionTypes = SendMessageBodyCreatorActionCreatorType\r\n\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n}\r\n\r\n\r\nexport const Message = (props: MessagePropsType) => {\r\n    const Avatar = <img className={s.img} src={\"https://themified.com/friend-finder/images/users/user-7.jpg\"} alt=\"avatar\" />\r\n    return (\r\n        <div className={s.dialog}>{Avatar}{props.message}</div>\r\n    )\r\n}\r\n\r\n","import { InjectedFormProps } from \"redux-form\";\r\nimport { AddmessageFormType } from \"./Dialogs\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport { Textarea } from \"../Common/FormsControl/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../utils/validators\";\r\n\r\nconst  maxlenght50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddmessageFormType>> = (\r\n  props\r\n) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          className={s.inputStyle}\r\n          component={Textarea}\r\n          validate={[required, maxlenght50]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className={s.button}>Sent</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport const AddmessageFormRedux = reduxForm<AddmessageFormType>({\r\n  form: \"dialogAddMessageForm\",\r\n})(AddMessageForm);\r\n","import { NavLink, Redirect } from \"react-router-dom\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport { Message } from \"./Message/Message\";\r\nimport { AppRootStateType } from \"../../Redux/redax-store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { DialogsType } from \"../../Redux/Dialogs-reducer\";\r\nimport { AddmessageFormRedux } from \"./AddMessageForm\";\r\n\r\nexport type AddmessageFormType = {\r\n  newMessageBody: string;\r\n};\r\n\r\ntype dialogsType = {\r\n  addChatContainer: (newMessageBody: string) => void;\r\n  isAuth: boolean;\r\n};\r\nconst DialogsItems = (props: any) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + \"\" + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\nexport const Dialogs = (props: dialogsType) => {\r\n  const dialogsMessage = useSelector<AppRootStateType, DialogsType>(\r\n    (state) => state.dialogsReducer\r\n  );\r\n  let DialogsElements = dialogsMessage.DialogsData.map((d) => (\r\n    <DialogsItems name={d.name} id={d.id} />\r\n  ));\r\n  let messagesElement = dialogsMessage.MessagesData.map((m) => (\r\n    <Message message={m.message} />\r\n  ));\r\n\r\n  const addNewMessage = (inputData: AddmessageFormType) => {\r\n    props.addChatContainer(inputData.newMessageBody);\r\n  };\r\n  if (!props.isAuth) return <Redirect to={\"/Login\"} />;\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogItems}>\r\n        <span>{DialogsElements}</span>\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElement}</div>\r\n        <AddmessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppRootStateType } from \"../../../Redux/redax-store\";\r\nimport { sendMessageBodyAC } from \"../../../Redux/Dialogs-reducer\";\r\nimport { Dialogs } from \"../Dialogs\";\r\nimport { AuthType } from \"../../../Redux/Auth-reducer\";\r\nimport React from \"react\";\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nfunction DialogsContainer() {\r\n  const dispatch = useDispatch();\r\n  const isAuthLogin = useSelector<AppRootStateType, AuthType>(\r\n    (state) => state.authReducer\r\n  );\r\n\r\n  const addChatContainer = (newMessageBody: string) => {\r\n    dispatch(sendMessageBodyAC(newMessageBody));\r\n  };\r\n  return (\r\n    <Dialogs isAuth={isAuthLogin.isAuth} addChatContainer={addChatContainer} />\r\n  );\r\n}\r\n\r\nexport default compose(withAuthRedirect)(DialogsContainer);\r\n","import React, { ChangeEvent } from \"react\";\r\nimport s from \"./ProfileStatus.module.css\";\r\n\r\ntype ProfileStatusType = {\r\n  status: string;\r\n  updateStatus: (status: string) => void;\r\n};\r\n\r\nclass ProfileStatus extends React.Component<ProfileStatusType> {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n  activateEditMode = () => {\r\n    this.setState({ editMode: true });\r\n  };\r\n  deActivateEditMode = () => {\r\n    this.setState({ editMode: false });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n  onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(\r\n    prevProps: Readonly<ProfileStatusType>,\r\n    prevState: Readonly<{}>,\r\n    snapshot?: any\r\n  ) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          {!this.state.editMode && (\r\n            <div>\r\n              <span onDoubleClick={this.activateEditMode}>\r\n                {this.props.status || \"-----\"}\r\n              </span>\r\n            </div>\r\n          )}\r\n          {this.state.editMode && (\r\n            <div>\r\n              <input\r\n                className={s.inputStyle}\r\n                onChange={this.onStatusChange}\r\n                autoFocus={true}\r\n                onBlur={this.deActivateEditMode}\r\n                value={this.state.status}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../Common/Preloader/Preloader.sx\";\r\nimport { getAxiosProfileType } from \"../../../Redux/Profile-reducer\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\ntype ProfileInfoType = {\r\n  profile: null | getAxiosProfileType;\r\n  status: string;\r\n  updateStatus: (status: string) => void;\r\n};\r\n\r\nexport function ProfileInfo(props: ProfileInfoType) {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.ProfileStyle}>\r\n      <div className={s.ProfileInfo}></div>\r\n      <div>\r\n        <img\r\n          className={s.img}\r\n          src={props.profile.photos.small}\r\n          alt=\"ProfileFoto\"\r\n        />\r\n        <ul>\r\n          <h2>Contacts</h2>\r\n          <li>\r\n            <span>{props.profile.contacts.github}</span>\r\n          </li>\r\n          <li>\r\n            <span>{props.profile.contacts.facebook}</span>\r\n          </li>\r\n          <li>\r\n            <span>{props.profile.contacts.instagram}</span>\r\n          </li>\r\n          <ProfileStatus\r\n            updateStatus={props.updateStatus}\r\n            status={props.status}\r\n          />\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\ntype MyPostsType = {\r\n  message: string;\r\n  LikesCount: string;\r\n};\r\n\r\nexport const Posts: React.FC<MyPostsType> = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\"\r\n        alt=\"userPicture\"\r\n      />\r\n\r\n      {props.message}\r\n\r\n      <div>{props.LikesCount}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {Posts} from \"./Posts/Posts\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport {Button} from \"@mui/material\";\r\nimport {AppRootStateType} from \"../../../Redux/redax-store\";\r\nimport {ProfileType} from \"../../../Redux/Profile-reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\nimport {Textarea} from \"../../Common/FormsControl/FormsControls\";\r\n\r\ntype AddPostFormType = {\r\n    myPosts: string;\r\n};\r\n\r\ntype MyPostsType = {\r\n    addPost: (myPosts: string) => void;\r\n    onPostChangeContainer: (newText: string) => void;\r\n};\r\n\r\nexport const maxLength10 = maxLengthCreator(10);\r\n\r\nexport const MyPosts = (props: MyPostsType) => {\r\n    const profilePage = useSelector<AppRootStateType, ProfileType>(\r\n        (state) => state.profileReducer\r\n    );\r\n    let postsElement = profilePage.MyPostsData.map((m) => (\r\n        <Posts message={m.message} LikesCount={m.LikesCount}/>\r\n    ));\r\n\r\n    const addPost = (inputData: AddPostFormType) => {\r\n        props.addPost(inputData.myPosts);\r\n    };\r\n    return (\r\n        <div className={s.posts}>\r\n            <div>{postsElement}</div>\r\n            <AddPostFormRedux onSubmit={addPost}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const MypostsForm: React.FC<InjectedFormProps<AddPostFormType>> = (\r\n    props\r\n) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <div>\r\n                    <Field\r\n                        className={s.inputStyle}\r\n                        component={Textarea}\r\n                        name=\"myPosts\"\r\n                        placeholder=\"Enter your message\"\r\n                        validate={[required, maxLength10]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Button>Add post</Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm<AddPostFormType>({\r\n    form: \"addPostForm\",\r\n})(MypostsForm);\r\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI, userAPI} from \"../API/API\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USERS_PROFILE = \"SET-USERS-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\n\r\nexport type getAxiosProfileType = {\r\n    userId: number;\r\n    lookingForAJob: boolean;\r\n    lookingForAJobDescription: string;\r\n    fullName: string;\r\n    contacts: contactsType;\r\n    photos: photosType;\r\n};\r\nexport type contactsType = {\r\n    github: string;\r\n    vk: string;\r\n    facebook: string;\r\n    instagram: string;\r\n    twitter: string;\r\n    website: string;\r\n    youtube: string;\r\n    mainLink: string;\r\n};\r\nexport type photosType = {\r\n    small: string;\r\n    large: string;\r\n};\r\n\r\nexport type ChangeNewPostACType = {\r\n    type: \"UPDATE_NEW_POST_TEXT\";\r\n    newText: string;\r\n};\r\n\r\nexport type ProfileType = typeof initialState;\r\n\r\nexport const initialState = {\r\n    MyPostsData: [\r\n        {id: 1, message: \"Hello my friend\", LikesCount: \"12\"},\r\n        {id: 2, message: \"This is my first post\", LikesCount: \"10\"},\r\n        {id: 3, message: \"DaDa\", LikesCount: \"10\"},\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nexport const profileReducer = (state: ProfileType = initialState, action: ActionTypes): typeof initialState => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: new Date().getTime(),\r\n                message: action.myPosts,\r\n                LikesCount: \"0\",\r\n            };\r\n            return {\r\n                ...state,\r\n                MyPostsData: [...state.MyPostsData, newPost],\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const addPostActionCreator = (myPosts: string) => {\r\n    return {\r\n        type: \"ADD-POST\",\r\n        myPosts,\r\n    } as const;\r\n};\r\nexport const setUserProfileAC = (profile: null) => {\r\n    return {\r\n        type: \"SET-USERS-PROFILE\",\r\n        profile,\r\n    } as const;\r\n};\r\nexport const onPostChangeActionCreator = (\r\n    newText: string\r\n): ChangeNewPostACType => {\r\n    return {\r\n        type: \"UPDATE_NEW_POST_TEXT\",\r\n        newText: newText,\r\n    } as const;\r\n};\r\nexport const setStatusAC = (status: string) => {\r\n    return {\r\n        type: \"SET-STATUS\",\r\n        status,\r\n    } as const;\r\n};\r\ntype setStatusACType = ReturnType<typeof setStatusAC>;\r\ntype setUsersProfileActionCreatorType = ReturnType<typeof setUserProfileAC>;\r\ntype AddPostActionCreatorType = ReturnType<typeof addPostActionCreator>;\r\ntype OnPostChangeActionCreatorType = ReturnType<typeof onPostChangeActionCreator>;\r\ntype ActionTypes =\r\n    | AddPostActionCreatorType\r\n    | OnPostChangeActionCreatorType\r\n    | setUsersProfileActionCreatorType\r\n    | setStatusACType;\r\n\r\nexport const getUsersProfile = (userId: string) => (dispatch: Dispatch) => {\r\n    userAPI.getProfile(userId).then((response) => {\r\n        dispatch(setUserProfileAC(response.data));\r\n    });\r\n};\r\nexport const getStatus = (userId: string) => (dispatch: Dispatch) => {\r\n    profileAPI.getStatus(userId).then((response) => {\r\n        dispatch(setStatusAC(response.data));\r\n    });\r\n};\r\nexport const updateStatus = (status: string) => (dispatch: Dispatch) => {\r\n    profileAPI.updateStatus(status).then((response) => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatusAC(status));\r\n        }\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { MyPosts } from \"../Myposts\";\r\nimport {\r\n  addPostActionCreator,\r\n  onPostChangeActionCreator,\r\n} from \"../../../../Redux/Profile-reducer\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst MyPostsContainer = () => {\r\n  const dispatch = useDispatch();\r\n  let addPost = (myPosts: string) => {\r\n    dispatch(addPostActionCreator(myPosts));\r\n  };\r\n  const onPostChangeContainer = (newText: string) => {\r\n    dispatch(onPostChangeActionCreator(newText));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MyPosts\r\n        addPost={addPost}\r\n        onPostChangeContainer={onPostChangeContainer}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/Posts/MypostsConteiner\";\r\nimport {getAxiosProfileType} from \"../../Redux/Profile-reducer\";\r\n\r\ntype ProfileType = {\r\n    profile: null | getAxiosProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n\r\nexport const Profile = (props: ProfileType) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/redax-store\";\r\nimport {getAxiosProfileType, getStatus, getUsersProfile, ProfileType, updateStatus} from \"../../Redux/Profile-reducer\";\r\n\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n\r\n}\r\ntype mapStateToPropsType = {\r\n    profile: null | getAxiosProfileType\r\n    status: string\r\n    // updateStatus:string\r\n}\r\ntype mapDispatchToPropsType = {\r\n    getUsersProfile: (userId: string) => void;\r\n    getStatus: (userId: string) => void;\r\n    updateStatus: (status: string) => void\r\n}\r\nexport type ProfileContainerType =\r\n    mapStateToPropsType\r\n    & mapDispatchToPropsType\r\n    & RouteComponentProps<PathParamsType>\r\n\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerType, ProfileType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = \"20717\"\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        // if (!this.props.isAuth) return <Redirect to={\"/Login\"}/>\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppRootStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profileReducer.profile,\r\n        status: state.profileReducer.status,\r\n    }\r\n}\r\n\r\n// let withUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus}),\r\n    withAuthRedirect)(ProfileContainer);\r\n\r\n\r\n// withAuthRedirect (connect(mapStateToProps, {getUsersProfile})(withUrlDataContainerComponent));","import React from 'react';\r\nimport { Navbar } from './Components/Navbar/Navbar';\r\nimport s from './App.module.css';\r\nimport style from './Content.module.css';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { SideBarFriends } from \"./Components/SideBarFriends/SideBarFriends\";\r\nimport UsersContainer from \"./users/UsersContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport DialogsContainer from \"./Components/Dialogs/Message/DialogsContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\n\r\n\r\nexport type AppPropsType = {}\r\n\r\nconst App: React.FC<AppPropsType> = (props: AppPropsType) => {\r\n\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={s.appWrapper}>\r\n                <HeaderContainer />\r\n                <div className={s.navbarwrappper}>\r\n                    <Navbar />\r\n                    <SideBarFriends />\r\n                </div>\r\n                <div className={style.content}>\r\n                    <Route path='/Social-network' render={() => <ProfileContainer />} />\r\n                    <Route path='/dialogs' render={() =>\r\n                        <DialogsContainer />} />\r\n                    <Route path='/profile/:userId?'\r\n                        render={() => <ProfileContainer />} />\r\n                    <Route path='/users'\r\n                        render={() => <UsersContainer />} />\r\n                    <Route path='/Login'\r\n                        render={() => <Login  />} />\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\nexport default App;\r\n","export type SideType = typeof initialState\r\n\r\nlet initialState = {\r\n    SideBar: [\r\n        {id: 1, name: \"Andru\"},\r\n        {id: 2, name: \"Sasha\"},\r\n        {id: 3, name: \"Sveta\"},\r\n    ]\r\n\r\n}\r\n\r\nexport const sidebarReducer = (state: SideType=initialState, action: any):typeof initialState=> {\r\n    return state;\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {dialogsReducer} from \"./Dialogs-reducer\";\r\nimport {profileReducer} from \"./Profile-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\nimport {usersReducer} from \"./Users-reducer\";\r\nimport authReducer from \"./Auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    dialogsReducer,\r\n    profileReducer,\r\n    sidebarReducer,\r\n    users: usersReducer,\r\n    authReducer,\r\n    form: formReducer\r\n});\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nexport type AppRootStateType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport ReactDOM from 'react-dom';\r\nimport store, {AppRootStateType} from \"./Redux/redax-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n// let rerenderEntireTree = (store: AppRootStateType) => {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App  />\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n// }\r\nlet state = store.getState()\r\n\r\n\r\n// rerenderEntireTree(state);\r\n// store.subscribe(() => {\r\n//     let state = store.getState()\r\n//     rerenderEntireTree(state);\r\n// });\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1x_5z\",\"item\":\"Navbar_item__aF-j8\",\"active\":\"Navbar_active__2Wknj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"SIdebarFriends_sideBar__34H3G\",\"item\":\"SIdebarFriends_item__e04Zd\",\"active\":\"SIdebarFriends_active__3mvtD\",\"content\":\"SIdebarFriends_content__2ZlIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersFoto\":\"Users_usersFoto__2xEXg\",\"selectedPageFat\":\"Users_selectedPageFat__3PHuZ\",\"selectedPageThin\":\"Users_selectedPageThin__3hZNz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Login_input__PwcNm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__nmEEx\",\"img\":\"ProfileInfo_img__2c2fZ\",\"ProfileStyle\":\"ProfileInfo_ProfileStyle__22YMT\"};"],"sourceRoot":""}