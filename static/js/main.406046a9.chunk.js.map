{"version":3,"sources":["Components/Header/Header.tsx","Components/Navbar/Navbar.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/My posts/Posts/Posts.tsx","Components/Profile/My posts/Myposts.tsx","Redux/Profile-reducer.ts","Components/Profile/My posts/Posts/MypostsConteiner.tsx","Components/Profile/Profile.tsx","Components/Dialogs/Message/Message.tsx","Redux/Dialogs-reducer.ts","Components/Dialogs/Dialogs.tsx","Components/SideBarFriends/SideBarFriends.tsx","App.tsx","Redux/sidebar-reducer.ts","Redux/redax-store.ts","index.tsx","Components/Navbar/Navbar.module.css","Components/Dialogs/Dialogs.module.css","Components/SideBarFriends/SIdebarFriends.module.css","App.module.css","Components/Header/Header.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/My posts/Posts/Post.module.css","Components/Profile/My posts/MyPosts.module.css","Content.module.css"],"names":["Header","className","s","header","src","Navbar","props","nav","item","to","activeClassName","active","ProfileInfo","Posts","message","LikesCount","MyPosts","postsElement","useSelector","state","profileReducer","ProfilePage","MyPostsData","map","m","onAddPost","addPost","Typography","variant","gutterBottom","component","posts","TextField","id","label","onKeyPress","e","charCode","value","postProfile","onChange","newText","currentTarget","onPostChangeContainer","Button","onClick","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","MyPostsContainer","dispatch","useDispatch","profilePage","type","onPostChangeActionCreator","Profile","Message","Avatar","img","dialog","messagePage","DialogsData","name","MessagesData","newMessageBody","DialogsItems","path","Dialogs","dialogsMessage","dialogsReducer","DialogsElements","d","messagesElement","dialogs","dialogItems","messages","body","updateNewMessageBodyAC","FriendsItem","SideBarFriends","bigFriends","sidebarReducer","SideBar","sideBar","content","App","appWrapper","navbarwrappper","style","render","reducers","combineReducers","action","push","newPost","Date","getTime","store","createStore","ReactDOM","document","getElementById","getState","module","exports"],"mappings":"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","file":"static/js/main.406046a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\n\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header  className={s.header}>\r\n      <img src='https://themified.com/friend-finder/images/logo.png' />\r\n    </header>)\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\nimport {AppRootStateType} from \"../../Redux/redax-store\";\r\n\r\n\r\n\r\ntype NavbarStateType = {\r\n}\r\n\r\n\r\nexport const Navbar = (props: NavbarStateType) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.active}>News</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.active}>Music</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink to='settings' activeClassName={s.active}>Settings</NavLink></div>\r\n        </nav>\r\n)\r\n}","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nexport const ProfileInfo=()=>{\r\n    return(<div>\r\n        <div className={s.ProfileInfo}>\r\n        <img src='http://www.wpkixx.com/html/winku-dark/images/resources/timeline-1.jpg'/>\r\n      </div>\r\n      <div>\r\n        ava+dicription\r\n      </div> \r\n      </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype MyPostsType = {\r\n    message: string,\r\n    LikesCount: string\r\n};\r\n\r\n\r\nexport const Posts: React.FC<MyPostsType> = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg'/>\r\n\r\n            {props.message}\r\n\r\n    <div>{props.LikesCount}</div>\r\n</div>\r\n)\r\n}\r\n\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport {Posts} from './Posts/Posts';\r\nimport s from './MyPosts.module.css';\r\nimport {Button, TextField, Typography} from \"@mui/material\";\r\nimport {AppRootStateType} from \"../../../Redux/redax-store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ProfileType} from \"../../../Redux/Profile-reducer\";\r\n\r\n\r\ntype MyPostsDataType = {\r\n    id: number,\r\n    message: string,\r\n    LikesCount: string\r\n}\r\ntype MyPostsType = {\r\n    postProfile: string\r\n    addPost: () => void\r\n    onPostChangeContainer: (newText: string) => void\r\n\r\n}\r\n\r\n\r\nexport const MyPosts = (props: MyPostsType) => {\r\n    const profilePage = useSelector<AppRootStateType, ProfileType>(state => state.profileReducer)\r\n    let postsElement = profilePage.ProfilePage.MyPostsData.map(m => <Posts message={m.message}\r\n                                                                           LikesCount={m.LikesCount}/>)\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n    const onPostChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newText = e.currentTarget.value;\r\n        props.onPostChangeContainer(newText)\r\n    }\r\n    const onkeypressButton = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            onAddPost()\r\n        }\r\n    }\r\n    return <div>\r\n        <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\r\n        <div className={s.posts}>\r\n            {postsElement}\r\n        </div>\r\n        </Typography>\r\n        <div>\r\n            <div>\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Введите текст\"\r\n                    variant=\"outlined\"\r\n                    onKeyPress={onkeypressButton}\r\n                    value={props.postProfile}\r\n                    onChange={onPostChange}/>\r\n            </div>\r\n            <div>\r\n                <Button onClick={onAddPost}>Add post</Button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n","export type AddpostACType = {\r\n    type: 'ADD-POST'\r\n}\r\nexport type ChangeNewPostACType = {\r\n    type: \"UPDATE_NEW_POST_TEXT\"\r\n    newText: string\r\n}\r\nconst ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE_NEW_POST_TEXT\";\r\n\r\nexport type ProfileType = typeof initialState\r\nlet initialState = {\r\n    ProfilePage: {\r\n        MyPostsData: [\r\n            {id: 1, message: 'Hello my friend', LikesCount: '12'},\r\n            {id: 2, message: 'This is my first post', LikesCount: '10'},\r\n            {id: 2, message: 'DaDa', LikesCount: '10'},\r\n        ],\r\n        postProfile: \"\",\r\n    },\r\n};\r\n\r\nexport const profileReducer = (state:ProfileType =initialState, action: ActyionTypes): typeof initialState => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: new Date().getTime(),\r\n                message: state.ProfilePage.postProfile,\r\n                LikesCount: \"0\"\r\n            }\r\n            state.ProfilePage.MyPostsData.push(newPost);\r\n            state.ProfilePage.postProfile = (\"\");\r\n            return {...state};\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.ProfilePage.postProfile = action.newText;\r\n            return {...state};\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addPostActionCreator = (): AddpostACType => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\n\r\nexport const onPostChangeActionCreator = (newText: string): ChangeNewPostACType => {\r\n    return {\r\n        type: \"UPDATE_NEW_POST_TEXT\",\r\n        newText: newText\r\n    } \r\n}\r\ntype  AddPostActionCreatorType = ReturnType<typeof addPostActionCreator>\r\ntype OnPostChangeActionCreatorType = ReturnType<typeof onPostChangeActionCreator>\r\ntype ActyionTypes = AddPostActionCreatorType | OnPostChangeActionCreatorType\r\n\r\n\r\n","import React, {ChangeEvent, KeyboardEventHandler} from 'react';\r\nimport {MyPosts} from \"../Myposts\";\r\nimport {\r\n    addPostActionCreator,\r\n    onPostChangeActionCreator,\r\n    profileReducer,\r\n    ProfileType\r\n} from \"../../../../Redux/Profile-reducer\";\r\nimport store, {AppRootStateType} from \"../../../../Redux/redax-store\";\r\nimport {connect, ConnectedProps, useDispatch, useSelector} from \"react-redux\";\r\nimport {DialogsType} from \"../../../../Redux/Dialogs-reducer\";\r\nimport {runInNewContext} from \"vm\";\r\n\r\ntype MyPostsDataType = {\r\n    id: number,\r\n    message: string,\r\n    LikesCount: string\r\n}\r\ntype MyPostsContainerType = {}\r\n\r\n\r\nconst MyPostsContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const profilePage = useSelector<AppRootStateType, ProfileType>(state => state.profileReducer)\r\n    let addPost = () => {\r\n        dispatch(addPostActionCreator())\r\n    }\r\n    const onPostChangeContainer = (newText: string) => {\r\n        dispatch(onPostChangeActionCreator(newText))\r\n\r\n    }\r\n\r\n    return (<div>\r\n            <MyPosts\r\n                addPost={addPost}\r\n                onPostChangeContainer={onPostChangeContainer}\r\n                postProfile={profilePage.ProfilePage.postProfile}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport {AppRootStateType} from \"../../Redux/redax-store\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/Posts/MypostsConteiner\";\r\n\r\n;\r\n\r\n\r\ntype ProfileType = {\r\n    store: AppRootStateType\r\n    // newPostText: string\r\n\r\n}\r\n\r\nexport const Profile = () => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <div>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n}\r\n\r\n\r\nexport const Message = (props: MessagePropsType) => {\r\n    const  Avatar = <img className={s.img} src={\"https://themified.com/friend-finder/images/users/user-7.jpg\"}/>\r\n    return (\r\n        <div className={s.dialog}>{Avatar}{props.message}</div>\r\n    )\r\n}\r\n\r\n","export type DialogsType = typeof initialState\r\nlet initialState = {\r\n    messagePage: {\r\n        DialogsData: [\r\n            {id: 1, name: 'Pall'},\r\n            {id: 2, name: 'Artur'},\r\n            {id: 3, name: 'Valeri'},\r\n            {id: 4, name: 'Nikol'},\r\n            {id: 5, name: 'Bond'},\r\n            {id: 6, name: 'Petrovich'},\r\n        ],\r\n        MessagesData: [\r\n            {id: 1, message: 'hello'},\r\n            {id: 2, message: 'How are you'},\r\n            {id: 3, message: 'Yo'},\r\n        ],\r\n    },\r\n    newMessageBody: '',\r\n};\r\n\r\n\r\nexport const dialogsReducer = (state: DialogsType = initialState, action: ActionTypes): typeof initialState => {\r\n    switch (action.type) {\r\n        case \"UPDATE_NEW_MESSAGE_BODY\":\r\n            state.newMessageBody = action.body;\r\n            return {...state};\r\n        case \"SEND_MESSAGE_BODY\":\r\n            let body = state.newMessageBody;\r\n            state.messagePage.MessagesData.push({id: 4, message: body});\r\n            state.newMessageBody=\"\";\r\n            return {...state};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const sendMessageBodyAC = () => {\r\n    return {\r\n        type: \"SEND_MESSAGE_BODY\"\r\n    } as const\r\n}\r\nexport const updateNewMessageBodyAC = (body: string) => {\r\n    return {\r\n        type: \"UPDATE_NEW_MESSAGE_BODY\",\r\n        body\r\n    } as const\r\n}\r\n\r\ntype SendMessageBodyCreatorActionCreatorType = ReturnType<typeof sendMessageBodyAC>\r\ntype updateNewMessageBodyCreatorActionCreatorType = ReturnType<typeof updateNewMessageBodyAC>\r\n\r\n\r\ntype ActionTypes =\r\n    SendMessageBodyCreatorActionCreatorType\r\n    | updateNewMessageBodyCreatorActionCreatorType\r\n","import React, {ChangeEvent} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Dialogs.module.css'\r\nimport {Message} from './Message/Message';\r\nimport {DialogsType, sendMessageBodyAC, updateNewMessageBodyAC} from \"../../Redux/Dialogs-reducer\";\r\nimport {Button} from \"@mui/material\";\r\nimport {AppRootStateType} from \"../../Redux/redax-store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst DialogsItems = (props: any) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + '' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Dialogs = () => {\r\n    const dispatch = useDispatch();\r\n    const dialogsMessage = useSelector<AppRootStateType, DialogsType>(state => state.dialogsReducer)\r\n\r\n    let DialogsElements = dialogsMessage.messagePage.DialogsData.map(d => <DialogsItems name={d.name}\r\n                                                                                        id={d.id}/>);\r\n    let messagesElement = dialogsMessage.messagePage.MessagesData.map(m => <Message message={m.message}/>);\r\n    let newMessageBody = dialogsMessage.newMessageBody;\r\n    const addChat = () => {\r\n        dispatch(sendMessageBodyAC());\r\n\r\n    }\r\n    const onChangeNewBody = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        debugger\r\n        let body = e.currentTarget.value\r\n        dispatch(updateNewMessageBodyAC(body));\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                <span>{DialogsElements}</span>\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <div>\r\n                    <div><textarea value={newMessageBody} onChange={onChangeNewBody}/></div>\r\n                    <div><Button variant=\"contained\" onClick={addChat}>Sent</Button></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from \"./SIdebarFriends.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../Redux/redax-store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ProfileType} from \"../../Redux/Profile-reducer\";\r\nimport {SideType} from \"../../Redux/sidebar-reducer\";\r\n\r\n\r\ntype SideBarFriendsType = {\r\n}\r\nconst FriendsItem = (props: any) => {\r\n    let path = '/profile/' + props.id;\r\n    return (\r\n        <div className={s.dialog + '' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const SideBarFriends = () => {\r\n    const profilePage = useSelector<AppRootStateType, SideType>(state => state.sidebarReducer)\r\n    const bigFriends = profilePage.SideBar.map(s => <FriendsItem name={s.name} id={s.id}/>)\r\n    return (\r\n        <nav className={s.sideBar}>\r\n\r\n            <div className={s.content}>\r\n                Friends online\r\n                <NavLink to=\"/friends\" activeClassName={s.active}>{bigFriends}</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport { Header } from './Components/Header/Header';\r\nimport { Navbar } from './Components/Navbar/Navbar';\r\nimport { Profile } from './Components/Profile/Profile';\r\nimport s from './App.module.css';\r\nimport style from './Content.module.css';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { Dialogs } from './Components/Dialogs/Dialogs';\r\nimport { SideBarFriends } from \"./Components/SideBarFriends/SideBarFriends\";\r\nimport store, { AppRootStateType } from \"./Redux/redax-store\";\r\nimport Store from './Redux/Store';\r\n\r\n\r\nexport type AppPropsType = {\r\n   \r\n}\r\n\r\nconst App: React.FC<AppPropsType> = (props: AppPropsType) => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={s.appWrapper}>\r\n                <Header />\r\n                <div className={s.navbarwrappper}>\r\n                    <Navbar />\r\n                    <SideBarFriends />\r\n                </div>\r\n                <div className={style.content}>\r\n                    <Route path='/dialogs' render={() =>\r\n                        <Dialogs  />} />\r\n                    <Route path='/profile' render={() => <Profile />} />\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\nexport default App;\r\n","export type SideType = typeof initialState\r\n\r\nlet initialState = {\r\n    SideBar: [\r\n        {id: 1, name: \"Andru\"},\r\n        {id: 2, name: \"Sasha\"},\r\n        {id: 3, name: \"Sveta\"},\r\n    ]\r\n\r\n}\r\n\r\nexport const sidebarReducer = (state: SideType=initialState, action: any):typeof initialState=> {\r\n    return state;\r\n}\r\n\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {dialogsReducer} from \"./Dialogs-reducer\";\r\nimport {profileReducer} from \"./Profile-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\n\r\nlet reducers= combineReducers({\r\n    dialogsReducer,\r\n    profileReducer,\r\n    sidebarReducer\r\n});\r\n\r\nexport const store = createStore(reducers);\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport ReactDOM from 'react-dom';\r\nimport store, {AppRootStateType} from \"./Redux/redax-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n// let rerenderEntireTree = (store: AppRootStateType) => {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App  />\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n// }\r\nlet state = store.getState()\r\n\r\n// rerenderEntireTree(state);\r\n// store.subscribe(() => {\r\n//     let state = store.getState()\r\n//     rerenderEntireTree(state);\r\n// });\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1x_5z\",\"item\":\"Navbar_item__aF-j8\",\"active\":\"Navbar_active__2Wknj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__-eIhE\",\"dialogItems\":\"Dialogs_dialogItems__1E-VT\",\"messages\":\"Dialogs_messages__1DwvL\",\"message\":\"Dialogs_message__4C7ZL\",\"s\":\"Dialogs_s__24nYo\",\"img\":\"Dialogs_img__14RvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"SIdebarFriends_sideBar__34H3G\",\"item\":\"SIdebarFriends_item__e04Zd\",\"active\":\"SIdebarFriends_active__3mvtD\",\"content\":\"SIdebarFriends_content__2ZlIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1WaLk\",\"navbarwrappper\":\"App_navbarwrappper__3iLdn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1hm4S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__nmEEx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__3jn7l\",\"item\":\"Post_item__wDNQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1AScq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__14Bda\"};"],"sourceRoot":""}